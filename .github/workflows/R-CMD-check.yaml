on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}
          # - {os: ubuntu-latest,   r: 'oldrel-2'}
          # - {os: ubuntu-latest,   r: 'oldrel-3'}
          # - {os: ubuntu-latest,   r: 'oldrel-4'}

    env:
      R_KEEP_PKG_SOURCE: yes
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install macOS specific dependencies for sf
        if: runner.os == 'macOS'
        run: brew install udunits gdal proj

      - name: Install Linux specific dependencies for sf
        if: runner.os == 'Linux'
        run: sudo apt-get install libgdal-dev libproj-dev libgeos-dev libudunits2-dev

      - name: Install Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: TRUE
          install-pandoc: TRUE
          extra-packages: any::rcmdcheck
          needs: check

      - name: Session Info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Test Coverage
        if: matrix.config.r == 'devel'
        run: |
          Rscript -e 'install.packages("xml2")'
          Rscript -e 'remotes::install_github("r-lib/covr@gh-actions")'
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
